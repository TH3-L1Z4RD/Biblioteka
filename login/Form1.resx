<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>